# Generated by Django 4.0.3 on 2022-12-02 23:18

from django.db import migrations
from logistics.models import ShipmentStatus


def migrate_shipment(apps, schema_editor):
    Claim = apps.get_model("supply_demand", "Claim")
    ShipmentItem = apps.get_model("logistics", "ShipmentItem")
    Shipment = apps.get_model("logistics", "Shipment")

    for shipment_item in ShipmentItem.objects.all().select_related("offered_item"):
        # RENE UA and Microsoft are direct shipments from Donor->DEPS
        if shipment_item.shipment_id in [1, 2]:
            if shipment_item.shipment.status == ShipmentStatus.DELIVERED:
                shipment_item.last_location = shipment_item.shipment.to_location
            else:
                shipment_item.last_location = shipment_item.shipment.from_location
            shipment_item.save()
            continue

        offered_item = shipment_item.offered_item
        contact = offered_item.offer.contact
        if contact.first_name or contact.last_name:
            contact_name = "%s %s" % (contact.first_name, contact.last_name)
            contact_name = contact_name.strip()
        else:
            contact_name = contact.username
        if contact.organisation_id:
            contact_name = f"{contact_name} ({contact.organisation.name})"

        date = offered_item.created_at
        shipment, created = Shipment.objects.get_or_create(
            name=f"Offer from {contact_name} - {date:%Y-%m-%d}",
            defaults={
                "shipment_date": date.date(),
                "delivery_date": date.date(),
                "from_location_id": 1,
                "to_location": shipment_item.shipment.from_location,
                "status": ShipmentStatus.DELIVERED,
            },
        )

        new_shipment_item = ShipmentItem.objects.create(
            shipment=shipment,
            offered_item=offered_item,
            amount=shipment_item.amount,
            when=date.date(),
            last_location=shipment.to_location,
            created_at=date,
            updated_at=date
        )

        shipment_item.parent_shipment_item = new_shipment_item
        if shipment_item.shipment.status == ShipmentStatus.DELIVERED:
            shipment_item.last_location = shipment_item.shipment.to_location
        else:
            shipment_item.last_location = shipment_item.shipment.from_location
        shipment_item.save()

    Claim.objects.filter(requested_item__isnull=True).delete()


class Migration(migrations.Migration):

    dependencies = [
        ('logistics', '0044_remove_shipment_is_delivered_alter_shipment_status'),
    ]

    operations = [
        migrations.RunPython(migrate_shipment),
    ]
